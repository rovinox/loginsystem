[{"C:\\Users\\md112\\Desktop\\loginsystem\\src\\index.js":"1","C:\\Users\\md112\\Desktop\\loginsystem\\src\\App.js":"2","C:\\Users\\md112\\Desktop\\loginsystem\\src\\reportWebVitals.js":"3","C:\\Users\\md112\\Desktop\\loginsystem\\src\\Routes.js":"4","C:\\Users\\md112\\Desktop\\loginsystem\\src\\components\\Login.js":"5","C:\\Users\\md112\\Desktop\\loginsystem\\src\\components\\Register.js":"6","C:\\Users\\md112\\Desktop\\loginsystem\\src\\components\\Home.js":"7"},{"size":940,"mtime":1612030298015,"results":"8","hashOfConfig":"9"},{"size":126,"mtime":1612029431579,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":460,"mtime":1612022508660,"results":"12","hashOfConfig":"9"},{"size":5518,"mtime":1612290499102,"results":"13","hashOfConfig":"9"},{"size":4126,"mtime":1612222784280,"results":"14","hashOfConfig":"9"},{"size":1962,"mtime":1612241697773,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"kzv0e1",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"C:\\Users\\md112\\Desktop\\loginsystem\\src\\index.js",[],["33","34"],"C:\\Users\\md112\\Desktop\\loginsystem\\src\\App.js",[],"C:\\Users\\md112\\Desktop\\loginsystem\\src\\reportWebVitals.js",[],"C:\\Users\\md112\\Desktop\\loginsystem\\src\\Routes.js",[],"C:\\Users\\md112\\Desktop\\loginsystem\\src\\components\\Login.js",[],"C:\\Users\\md112\\Desktop\\loginsystem\\src\\components\\Register.js",["35"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \"@global\": {\r\n    body: {\r\n      backgroundColor: theme.palette.common.dark,\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Register = (props) => {\r\n  const classes = useStyles();\r\n  const [user, setUser] = useState();\r\n\r\n  const handleInputChange = (e) => {\r\n    setUser({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleRegister = async () => {\r\n    const data = await axios.post(\"http://localhost:5050/register\");\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate autoComplete=\"off\">\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"off\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"off\"\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"off\"\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"off\"\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={handleRegister}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              Already have an account?{\" \"}\r\n              <Link style={{ color: \"white\" }} to=\"/\" variant=\"body2\">\r\n                Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\md112\\Desktop\\loginsystem\\src\\components\\Home.js",["36"],"import React, { useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"../App.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\nexport default function Home() {\r\n  const classes = useStyles();\r\n  const [isLogIn, setIsLogin] = useState(false);\r\n  useEffect(() => {\r\n    async function fetchMyAPI() {\r\n      let response = await axios.post(\"http://localhost:5050/register\");\r\n      console.log(\"response: \", response);\r\n      setIsLogin(response.data.isLogin);\r\n    }\r\n    fetchMyAPI();\r\n  }, [isLogIn]);\r\n  // if (!isLogIn) {\r\n  //   return <Redirect to=\"/\" />;\r\n  // }\r\n\r\n  const handleLogout = () => {\r\n    setIsLogin(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              className={classes.menuButton}\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h3\" className={classes.title}>\r\n              N M\r\n            </Typography>\r\n            <Button onClick={handleLogout} color=\"inherit\">\r\n              logout\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n      <div className=\"pyro\">\r\n        <div className=\"before\"></div>\r\n        <div className=\"after\"></div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":42,"column":10,"nodeType":"43","messageId":"44","endLine":42,"endColumn":14},{"ruleId":"41","severity":1,"message":"45","line":2,"column":10,"nodeType":"43","messageId":"44","endLine":2,"endColumn":18},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation"]